#include <iostream>
#include "popup_priority.h"
#include "Message_Def.h"
#include "gtest/gtest.h"

/* popup on test */
#include "popup_on.h"

using namespace std;


int msg_id_classA_on[] = 
{
	SERVICE_DI_DOOR_LF	,
	SERVICE_DI_DOOR_RF	,
	SERVICE_DI_DOOR_LB	,
	SERVICE_DI_DOOR_RB	,
	SERVICE_DI_DOOR_EC	,
	SERVICE_DI_DOOR_T	,
	SERVICE_DI_DOOR_LF_OPEN_RUN,
	SERVICE_DI_DOOR_RF_OPEN_RUN,
	SERVICE_DI_DOOR_LB_OPEN_RUN,
	SERVICE_DI_DOOR_RB_OPEN_RUN,
	SERVICE_DI_DOOR_EC_OPEN_RUN,
	SERVICE_DI_DOOR_T_OPEN_RUN,
	SERVICE_DI_ACC_TAKE_OVER_MESSAGE,
	SERVICE_DI_FCW_WARNING_ECHO_MESSAGE,
};

int msg_id_classA_off[] =
{
	SERVICE_DI_DOOR_RF_OPEN_POWEROFF,
	SERVICE_DI_DOOR_LF_OPEN_POWEROFF,
	SERVICE_DI_DOOR_LB_OPEN_POWEROFF,
	SERVICE_DI_DOOR_RB_OPEN_POWEROFF,
	SERVICE_DI_DOOR_EC_OPEN_POWEROFF,
	SERVICE_DI_DOOR_T_OPEN_POWEROFF,
	SERVICE_DI_PUT_SHIFTER_TO_PARK_MESSAGE,
	SERVICE_DI_IGNITION_KEY_ON_MESSAGE,
	SERVICE_DI_LIGHTS_ON_KEY_OUT_WARNING_MESSAGE,
	SERVICE_DI_PRESS_BRAKE_MESSAGE,
	SERVICE_DI_NO_SMART_KEY_DETECTED_MESSAGE,
	SERVICE_DI_NO_KEY_DETECTED_PRESS_CLUTCH_MESSAGE,
	SERVICE_DI_PUT_KEY_INTO_BACKUP_POSITION_MESSAGE,
	SERVICE_DI_PEPS_ANTENNA_FAULT_MESSAGE,
	SERVICE_DI_ESCL_FAULT_LEVEL2_ECHO_MESSAGE,
	SERVICE_DI_NO_KEY_DETECTED_PRESS_BRAKE_MESSAGE,
	SERVICE_DI_TAKE_SMART_KEY_MESSAGE,
	SERVICE_DI_KEY_OFF_WHEEL_NOT_STRAIGHT_REMINDER_MESSAGE,
	SERVICE_DI_ALARM_TRIGGERED_MESSAGE
};

int msg_id_classB[] = 
{
	SERVICE_DI_USE_KEY_TO_START_MESSAGE,
	SERVICE_DI_SELECT_NEUTRAL_TO_RESTART_MESSAGE,
	SERVICE_DI_LOW_WASHER_FLUID_MESSAGE,
	SERVICE_DI_LONG_PRESS_BUTTON_ENGINE_OFF_MESSAGE,
	SERVICE_DI_PRESS_BUTTON_ENGINE_OFF_MESSAGE,
	SERVICE_DI_PRESS_BRAKE_SHIFT_MESSAGE,
	SERVICE_DI_ENGAGE_PARK_OR_NEUTRAL_TO_START_MESSAGE,
	SERVICE_DI_PRESS_CLUTCH_MESSAGE,
	SERVICE_DI_DOUBLE_PRESS_BUTTON_ENGINE_OFF_MESSAGE
};                       


int msg_id_classC[] = 
{
	SERVICE_DI_EPB_ASSIST1_MESSAGE,
	SERVICE_DI_EPB_ASSIST2_MESSAGE,
	SERVICE_DI_EPB_ASSIST3_MESSAGE,
	SERVICE_DI_EPB_ASSIST4_MESSAGE,
	SERVICE_DI_EPB_ASSIST5_MESSAGE,
	SERVICE_DI_ENGINE_COOLANT_TEMP_ECHO_MESSAGE,
	SERVICE_DI_START_STOP_BUTTON_FAILED_MESSAGE,
	SERVICE_DI_CLUTCH_SWITCH_FAULT_MESSAGE,
	SERVICE_DI_KEY_BATTERY_LOW_MESSAGE,
	SERVICE_DI_LOCK_STATUS_ON_MESSAGE,
	SERVICE_DI_LOCK_STATUS_OFF_MESSAGE,
	SERVICE_DI_LOCK_STATUS_FAIL_MESSAGE,
	SERVICE_DI_HHC_FAIL_MESSAGE,
	SERVICE_DI_AUTOHOLD_FAULT_ECHO_MESSAGE,
	SERVICE_DI_AUTOHOLD_ASSIST1_MESSAGE,
	SERVICE_DI_AUTOHOLD_ASSIST2_MESSAGE,
	SERVICE_DI_AUTOHOLD_ASSIST3_MESSAGE,
	SERVICE_DI_AUTOHOLD_ASSIST4_MESSAGE,
	SERVICE_DI_AUTOHOLD_ASSIST5_MESSAGE,
	SERVICE_DI_ALTERNATOR_CHARGE_ECHO_MESSAGE,
	SERVICE_DI_SEAT_BELT_DRIVER_ECHO_MESSAGE,
	SERVICE_DI_FASTEN_SEATBELT_TO_RESTART_MESSAGE,
	SERVICE_DI_LOW_FUEL_ECHO_MESSAGE_LOW,
	SERVICE_DI_IGNITION_RELAY_FAILED_MESSAGE,
	SERVICE_DI_OVERSPEED_WARNING_MESSAGE,
	SERVICE_DI_POWER_LIFTGATE_SYSTEM_FAULT_MESSAGE,
	SERVICE_DI_POWER_LIFTGATE_SYSTEM_LIMIT_MESSAGE,
	SERVICE_DI_POWER_LIFTGATE_MANUAL_CLOSE_REQUEST_MESSAGE,
	SERVICE_DI_SIA_REMINDER_SUGGEST_MESSAGE,
	SERVICE_DI_FICM_SIA_REMINDER_SUGGEST_MESSAGE,
	SERVICE_DI_DOOR_LF_OPEN_STOP,
	SERVICE_DI_DOOR_RF_OPEN_STOP,
	SERVICE_DI_DOOR_LB_OPEN_STOP,
	SERVICE_DI_DOOR_RB_OPEN_STOP,
	SERVICE_DI_DOOR_EC_OPEN_STOP,
	SERVICE_DI_DOOR_T_OPEN_STOP,
	SERVICE_DI_ATS_MODE_MESSAGE,
	SERVICE_DI_ALL_WHEEL_DRIVE_INSERVICE_DICATION_MESSAGE,
	SERVICE_DI_LEFT_REGULATE_STEERING_MESSAGE,
	SERVICE_DI_LEFT_REGULATE_STREERING_MESSAGE,
	SERVICE_DI_RIGHT_REGULATE_STEERING_MESSAGE,
	SERVICE_DI_LOW_FUEL_ECHO_MESSAGE_CRITICAL,
	SERVICE_DI_FRONT_FOG_ON_ECHO_MESSAGE,
	SERVICE_DI_REAR_FOG_ON_ECHO_MESSAGE,
	SERVICE_DI_MAIN_BEAM_ECHO_MESSAGE,
	SERVICE_DI_ENGINE_DISABLED_MESSAGE,

	/* ADAS功能 begin*/
	SERVICE_DI_ACC_SYSTEM_STAND_BY_MESSAGE,
	SERVICE_DI_ACC_SENSOR_BLOCK_MESSAGE,
	SERVICE_DI_ACC_SYSTEM_CANCEL_REQUEST_MESSAGE,
	SERVICE_DI_ACC_SYSTEM_UNAVAILABLE_MESSAGE,
	SERVICE_DI_ACC_SYSTEM_OFF_MESSAGE,
	SERVICE_DI_ACC_SYSTEM_ON_MESSAGE,
	SERVICE_DI_FVCM_FAULT_MESSASGE,
	SERVICE_DI_AEB_SYSTEM_UNAVAILABE_MESSAGE,
	SERVICE_DI_AEB_SYSTEM_OFF_MESSAGE,
	SERVICE_DI_AEB_SYSTEM_ON_MESSAGE,
	SERVICE_DI_AEB_ACTIVE_MESSAGE,
	SERVICE_DI_LDW_SYSTEM_OFF_ECHO_MESSAGE,
	SERVICE_DI_LDW_STAND_BY_ECHO_MESSAGE,
	//SERVICE_DI_DOOR_LFCE_DI_LDW_SYSTEM_CROSSING_LANE_MESSAGE,
	SERVICE_DI_LDW_UNAVAILABLE_MESSAGE,
	SERVICE_DI_FCW_SYSTEM_OFF_ECHO_MESSAGE,
	SERVICE_DI_FCW_SYSTEM_ON_ECHO_MESSAGE,	
	SERVICE_DI_FCW_SYSTEM_UNAVAILABLE_ECHO_MESSAGE,	
	SERVICE_DI_SAS_SYSTEM_FAULT_MESSAGE,
	SERVICE_DI_SAS_SYSTEM_SPEED_LIMIT_REMINDER_MESSAGE	
};

int msg_id_negative[] = 
{
	SERVICE_DI_SEAT_BELT_WARNING_SOUND, /* 0 */
	SERVICE_DI_DIRECTION_INDICATOR_LEFT_HAND_LAMP_TICK_TOCK, /* 1 */
	SERVICE_DI_STOP_START_ON_MESSAGE, /* 87 */
	SERVICE_DI_USER_ODO_UNIT, /* 237 */                                      
	16843073 /* out of range */
};


#define POPUP_PRIORITY_TEST
#ifdef POPUP_PRIORITY_TEST
/********************************** popup_priority test start *****************************/

#define A_POWERON	0x13
#define B_POWERON	0x12
#define C_POWERON	0x11
#define A_POWEROFF	0x03
#define POPUP_NULL	0x00

/********************************************
 **SERVICE_DI_MessageID_Tag
 **NUM:321
 **MIN:SERVICE_DI_SEAT_BELT_WARNING_SOUND   --  16842752
 **MAX:SERVICE_DI_MESSAGE_MAX			   --  16843073
 ********************************************/

/* 测试用例 */
class PriorityTest :
	public ::testing::Test, 
	public ::testing::WithParamInterface<int> /* 模板类 <T>为传入数据类型 */
{
};


/* 测试特例 GetParam()方法获取框架指定的参数 */
/* popup_priority.c A class power on */
TEST_P(PriorityTest, ClassA_poweron)
{
	EXPECT_EQ(A_POWERON , get_messageid_priority( GetParam() ));
}

/* 
**	使用宏向框架注册“定制化测试” 
**	第一个参数是测试前缀，第二个参数是测试类名，第三个参数时参数生成规则 
*/
INSTANTIATE_TEST_CASE_P(TestClassAPowerOn, PriorityTest, testing::ValuesIn(msg_id_classA_on));


/* popup_priority.c A class power off */
TEST_P(PriorityTest, ClassA_poweroff)
{
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( GetParam() ));
}
INSTANTIATE_TEST_CASE_P(TestClassAPowerOff, PriorityTest, testing::ValuesIn(msg_id_classA_off));


/* popup_priority.c B class */
TEST_P(PriorityTest, negative)
{
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( GetParam() ));
}
INSTANTIATE_TEST_CASE_P(TestAutoIn, PriorityTest, testing::ValuesIn(msg_id_negative));


/* popup_priority.c C class */
TEST_P(PriorityTest, negative)
{
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( GetParam() ));
}
INSTANTIATE_TEST_CASE_P(TestAutoIn, PriorityTest, testing::ValuesIn(msg_id_negative));



/* popup_priority.c negative */
TEST_P(PriorityTest, negative)
{
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( GetParam() ));
}
INSTANTIATE_TEST_CASE_P(TestAutoIn, PriorityTest, testing::ValuesIn(msg_id_negative));



#endif

#ifdef POPUP_PRIORITY_TEST1
/* popup_priority.c A class */
TEST(PriorityTest, ClassA)
{
	cout << " = " <<  << endl;
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LF	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RF	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LB	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RB	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_EC	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_T	));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LF_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RF_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LB_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RB_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_EC_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_DOOR_T_OPEN_RUN));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_ACC_TAKE_OVER_MESSAGE));
	EXPECT_EQ(A_POWERON , get_messageid_priority( SERVICE_DI_FCW_WARNING_ECHO_MESSAGE));


	///off A
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_RF_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_LF_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_LB_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_RB_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_EC_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_DOOR_T_OPEN_POWEROFF));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_PUT_SHIFTER_TO_PARK_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_IGNITION_KEY_ON_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_LIGHTS_ON_KEY_OUT_WARNING_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_PRESS_BRAKE_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_NO_SMART_KEY_DETECTED_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_NO_KEY_DETECTED_PRESS_CLUTCH_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_PUT_KEY_INTO_BACKUP_POSITION_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_PEPS_ANTENNA_FAULT_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_ESCL_FAULT_LEVEL2_ECHO_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_NO_KEY_DETECTED_PRESS_BRAKE_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_TAKE_SMART_KEY_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_KEY_OFF_WHEEL_NOT_STRAIGHT_REMINDER_MESSAGE));
	EXPECT_EQ(A_POWEROFF , get_messageid_priority( SERVICE_DI_ALARM_TRIGGERED_MESSAGE)); 


}


/* popup_priority.c B class */
TEST(PriorityTest, ClassB)
{
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_USE_KEY_TO_START_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_SELECT_NEUTRAL_TO_RESTART_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_LOW_WASHER_FLUID_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_LONG_PRESS_BUTTON_ENGINE_OFF_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_PRESS_BUTTON_ENGINE_OFF_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_PRESS_BRAKE_SHIFT_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_ENGAGE_PARK_OR_NEUTRAL_TO_START_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_PRESS_CLUTCH_MESSAGE));
	EXPECT_EQ(B_POWERON , get_messageid_priority( SERVICE_DI_DOUBLE_PRESS_BUTTON_ENGINE_OFF_MESSAGE));
}


/* popup_priority.c C class */
TEST(PriorityTest, ClassC)
{
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_EPB_ASSIST1_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_EPB_ASSIST2_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_EPB_ASSIST3_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_EPB_ASSIST4_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_EPB_ASSIST5_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ENGINE_COOLANT_TEMP_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_START_STOP_BUTTON_FAILED_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_CLUTCH_SWITCH_FAULT_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_KEY_BATTERY_LOW_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LOCK_STATUS_ON_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LOCK_STATUS_OFF_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LOCK_STATUS_FAIL_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_HHC_FAIL_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_FAULT_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_ASSIST1_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_ASSIST2_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_ASSIST3_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_ASSIST4_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AUTOHOLD_ASSIST5_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ALTERNATOR_CHARGE_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_SEAT_BELT_DRIVER_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FASTEN_SEATBELT_TO_RESTART_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LOW_FUEL_ECHO_MESSAGE_LOW));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_IGNITION_RELAY_FAILED_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_OVERSPEED_WARNING_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_POWER_LIFTGATE_SYSTEM_FAULT_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_POWER_LIFTGATE_SYSTEM_LIMIT_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_POWER_LIFTGATE_MANUAL_CLOSE_REQUEST_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_SIA_REMINDER_SUGGEST_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FICM_SIA_REMINDER_SUGGEST_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LF_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RF_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LB_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_RB_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_EC_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_T_OPEN_STOP));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ATS_MODE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ALL_WHEEL_DRIVE_INSERVICE_DICATION_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LEFT_REGULATE_STEERING_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LEFT_REGULATE_STREERING_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_RIGHT_REGULATE_STEERING_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LOW_FUEL_ECHO_MESSAGE_CRITICAL));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FRONT_FOG_ON_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_REAR_FOG_ON_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_MAIN_BEAM_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ENGINE_DISABLED_MESSAGE));

	/* ADAS功能 begin*/
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SYSTEM_STAND_BY_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SENSOR_BLOCK_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SYSTEM_CANCEL_REQUEST_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SYSTEM_UNAVAILABLE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SYSTEM_OFF_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_ACC_SYSTEM_ON_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FVCM_FAULT_MESSASGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AEB_SYSTEM_UNAVAILABE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AEB_SYSTEM_OFF_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AEB_SYSTEM_ON_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_AEB_ACTIVE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LDW_SYSTEM_OFF_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LDW_STAND_BY_ECHO_MESSAGE));
	//EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_DOOR_LFCE_DI_LDW_SYSTEM_CROSSING_LANE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_LDW_UNAVAILABLE_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FCW_SYSTEM_OFF_ECHO_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FCW_SYSTEM_ON_ECHO_MESSAGE));	
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_FCW_SYSTEM_UNAVAILABLE_ECHO_MESSAGE));	
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_SAS_SYSTEM_FAULT_MESSAGE));
	EXPECT_EQ(C_POWERON , get_messageid_priority( SERVICE_DI_SAS_SYSTEM_SPEED_LIMIT_REMINDER_MESSAGE));	
}

/* popup_priority.c negative */
TEST(PriorityTest, negative)
{
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( SERVICE_DI_SEAT_BELT_WARNING_SOUND)); /* 0 */
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( SERVICE_DI_DIRECTION_INDICATOR_LEFT_HAND_LAMP_TICK_TOCK)); /* 1 */
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( SERVICE_DI_STOP_START_ON_MESSAGE)); /* 87 */
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( SERVICE_DI_USER_ODO_UNIT)); /* 237 */                                      
	EXPECT_EQ(POPUP_NULL , get_messageid_priority( 16843073 ));
}

/********************************** popup_priority test end *****************************/
#endif 



//#define POPUP_ON_TEST
#ifdef POPUP_ON_TEST

#define WITHIN	1
#define WITHOUT 0

/********************************** popup_on test end *****************************/
TEST(PopupOnFuncIsThisPopupOnTest, ClassA)
{
	EXPECT_EQ(WITHOUT , is_this_popup_on( SERVICE_DI_DOOR_LF	));

}

TEST(PopupOnFuncIsThisPopupOnTest, ClassB)
{
	EXPECT_EQ(WITHOUT , is_this_popup_on( SERVICE_DI_DOOR_LF	));

}

TEST(PopupOnFuncIsThisPopupOnTest, ClassC)
{
	EXPECT_EQ(WITHOUT , is_this_popup_on( SERVICE_DI_DOOR_LF	));

}

TEST(PopupOnFuncIsThisPopupOnTest, negative)
{
	EXPECT_EQ(WITHOUT , is_this_popup_on( SERVICE_DI_DOOR_LF	));

}



/********************************** popup_on test end *****************************/
#endif




